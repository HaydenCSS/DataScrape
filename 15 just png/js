const fs = require('fs');
const path = require('path');
const ExifParser = require('exif-parser');
const sharp = require('sharp');

// Function to extract metadata from images
async function extractMetadata(imagePath) {
    try {
        const ext = path.extname(imagePath).toLowerCase();
        const imageBuffer = fs.readFileSync(imagePath);

        // Initialize metadata object
        let metadata = {};

        if (ext === '.jpg' || ext === '.jpeg') {
            const parser = ExifParser.create(imageBuffer);
            const exifData = parser.parse();
            metadata = {
                creationDate: exifData.tags.createDate || 'N/A',
                cameraMake: exifData.tags.make || 'N/A',
                cameraModel: exifData.tags.model || 'N/A',
                width: exifData.tags.imageWidth || 'N/A',
                height: exifData.tags.imageHeight || 'N/A',
            };
        } else {
            // Handle PNG and other formats
            const sharpMetadata = await sharp(imageBuffer).metadata();
            metadata = {
                creationDate: 'N/A', // Creation date not available in PNG
                width: sharpMetadata.width || 'N/A',
                height: sharpMetadata.height || 'N/A',
                format: sharpMetadata.format || 'N/A',
            };
        }

        // Display the extracted metadata
        console.log(`Metadata for ${path.basename(imagePath)}:`);
        console.log(`Creation Date: ${metadata.creationDate}`);
        console.log(`Camera Make: ${metadata.cameraMake}`);
        console.log(`Camera Model: ${metadata.cameraModel}`);
        console.log(`Image Width: ${metadata.width}`);
        console.log(`Image Height: ${metadata.height}`);
        console.log('----------------------------------------');
    } catch (error) {
        console.error(`Failed to extract metadata from ${imagePath}: ${error.message}`);
    }
}

// Start the metadata extraction process
const imagePaths = process.argv.slice(2); // Get image paths from command-line arguments

if (imagePaths.length === 0) {
    console.error('Please provide at least one image file path.');
    process.exit(1);
}

imagePaths.forEach(extractMetadata);
    
