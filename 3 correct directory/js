const axios = require('axios');
const fs = require('fs');
const path = require('path');

// Get the URL and save path from command-line arguments
const [inputUrl, savePath = 'data'] = process.argv.slice(2);

// Function to create a directory if it doesn't exist
function createDirectory(dir) {
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
}

// Function to download an image
async function downloadImage(imgSrc) {
    const imgName = path.basename(imgSrc);
    const imgPath = path.join(savePath, imgName);

    createDirectory(savePath);

    try {
        const response = await axios({
            url: imgSrc.startsWith('http') ? imgSrc : new URL(imgSrc, inputUrl).href,
            method: 'GET',
            responseType: 'stream',
        });

        const writer = fs.createWriteStream(imgPath);
        response.data.pipe(writer);
        writer.on('finish', () => console.log(`Downloaded: ${imgPath}`));
    } catch (error) {
        console.error(`Failed to download image ${imgSrc}: ${error.message}`);
    }
}

// Start the download process
(async () => {
    try {
        const { data } = await axios.get(inputUrl);
        const imgSrcs = data.match(/<img[^>]+src="([^">]+)"/g).map(img => img.match(/src="([^">]+)/)[1]);
        imgSrcs.forEach(downloadImage);
    } catch (error) {
        console.error(`Error fetching URL: ${error.message}`);
    }
})();
